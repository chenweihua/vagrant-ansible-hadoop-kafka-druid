#
# Licensed to Metamarkets Group Inc. (Metamarkets) under one
# or more contributor license agreements. See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership. Metamarkets licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License. You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied. See the License for the
# specific language governing permissions and limitations
# under the License.
#

#
# Extensions
#

# This is not the full list of Druid extensions, but common ones that people often use. You may need to change this list
# based on your particular setup.
druid.extensions.loadList={{ druid_extensions_loadlist | to_json }}

# If you have a different version of Hadoop, place your Hadoop client jar files in your hadoop-dependencies directory
# and uncomment the line below to point to your directory.
#druid.extensions.hadoopDependenciesDir=/my/dir/hadoop-dependencies

{% if druid_extensions_hadoopdependenciesdir != "" %}
druid.extensions.hadoopDependenciesDir={{ druid_extensions_hadoopdependenciesdir }}
{% endif %}

#
# Logging
#

# Log all runtime properties on startup. Disable to avoid logging properties on startup:
druid.startup.logging.logProperties={{ druid_startup_logging_logproperties }}

#
# Zookeeper
#

druid.zk.service.host={{druid_zk_ips}}
druid.zk.paths.base={{ druid_zk_paths_base }}

#
# Metadata storage
#

{% if druid_metadata_storage_type is defined and druid_metadata_storage_type != "" %}
druid.metadata.storage.type={{druid_metadata_storage_type}}
druid.metadata.storage.connector.connectURI={{druid_metadata_storage_connector_connectURI}}
druid.metadata.storage.connector.user={{druid_metadata_storage_connector_user}}
druid.metadata.storage.connector.password={{druid_metadata_storage_connector_password}}
{% endif %}

#
# Deep storage
#

# Deep storage (local filesystem for examples - don't use this in production)
{% if druid_storage_type is defined and druid_storage_type != "local" %}
druid.storage.type={{druid_storage_type}}
druid.storage.storageDirectory={{druid_storage_storageDirectory}}
{% else %}
druid.storage.type=local
druid.storage.storageDirectory=/tmp/druid/localStorage
{% endif %}

#
# Indexing service logs
#

{% if druid_indexer_logs_type is defined and druid_indexer_logs_type != "" %}
druid.indexer.logs.type={{ druid_indexer_logs_type }}
druid.indexer.logs.directory={{ druid_indexer_logs_directory }}
{% else %}
druid.indexer.logs.type=file
druid.indexer.logs.directory=var/druid/indexing-logs
{% endif %}

#
# Service discovery
#

druid.selectors.indexing.serviceName={{ druid_selectors_indexing_service_name }}
druid.selectors.coordinator.serviceName={{ druid_selectors_coordinator_service_name }}

#
# Monitoring
#

druid.monitoring.monitors={{ druid_monitoring_monitors_list|to_json }}
druid.emitter={{ druid_emitter }}
druid.emitter.logging.logLevel={{ druid_emitter_logging_loglevel }}
